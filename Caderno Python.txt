https://www.youtube.com/watch?v=XKHEtdqhLK8&list=PLPRNBHSYqlMC3ljrMiGGUd2lfKFC27vbk



 * Dicionário *

- Variable is a container for a value. It behaves as the valu that it contains

- String (str) is a series of characters

- Integer (int) is a whole number 

- Float (float) is an floating point number (a decimal number)

- Boolean (bool) is an true or false variable 

- != = diferente 

- "" = vazio, sem declaração 

- end="" = para colocar tudo na mesma linha 



 * Índice *

- print 

- type - para retornar o tipo de variável

- len - Lenght - String Methods - para retornar a quantidade de caracteres na string 

- find - String Methods - para encontrar a posição de uma letra específica dentro de uma string 

- capitalize - String Methods - para deixar a primeira letra em maiúscula 

- upper - String Methods - para deixar todas as letras da string maiúsculas 

- lower - String Methods - para deixar as letras da string minúsculas 

- isdigit - String Methods - para verificar se são dígitos, com retorno True ou False 

- isalpha - String Methods - para verificar se são caracteres alphabeticos (espaço não é caracter alphabetico)

- count - String Methods - para contar a quantidade de um caracter especifico   

- input - para aceitar um user input 

- import math - importar o módulo de matemática
	- round - para arredondar 
	- math.ceil - ceiling - para arredondar para cima 
	- math.floor - para arredondar para baixo 
	- abs - absolute - para deixar o número positivo, módulo 
	- pow - power - print(pow(variavel,x)) - para elevar a uma potência 
	- sqrt - square root - para calcular raiz quadrada ]
	- max - para encontrar o maior número dentro das variáveis declaradas 
	- min - para encontrar o menor número dentro das variáveis declaradas 

- reversed_variavel - reversed_variavel = variavel[::-1]  - para retornar a variável ao contrário 

- Condições
	- if 
	- elif 
	- else

- Operadores Lógicos 
	- And
	- Or
	- Not

- Loops
	- While
	- For 

- range

- Import Time 
	- time.sleep 

- end

- Loop Control
	- Break
	- Continue
	- Pass  

- Lists 
	- []
	- variavel.append("item") - para adicionar um item à tabela na ultima posição 
	- variavel.remove("item") - para retirar um elemento da tabela (nome do elemento e não posição)
	- variavel.pop() - para remover o ultimo item da lista
	- variavel.insert(x,"item") - para inserir um item em uma posição predeterminada 
	- variavel.sort() - para ordenar a lista em ordem alfabetica
	- variavel.clear() - para remover todos os itens de uma lista 



 * Lembretes * 

- Só se pode concatenar variáveis do mesmo tipo 



 * Boas práticas *

- Variáveis com nomes compostos separar com _ 

- Citação com áspas duplas " " 


___________________
Abrindo um projeto
___________________
PyCharm > New Project  > Editar nome > dês-selecionar “Welcome Script” > Create 


____________________________________
Abrindo um novo arquivo para Python
____________________________________
File > New > Python File > Colocar um nome > Opção: Python File  


____________________________
Mudando o tamanho e a fonte 
____________________________
File > Settings > Editor > Font >  Escolher a fonte e o tamanho > Apply > Ok 


_______________________________________
Print a message on the terminal window
_______________________________________
	print ('I love pizza')
	print ("It's really good")

* Embora não haja diferença entre áspas simples e duplas, note como as áspas simples se misturam com o apóstrofo em
inglês. Então, para citação é melhor as áspas duplas.  


___________
Comentário
___________
Para deixar um comentário basta colocar um # no início da linha 


__________
Variáveis 
__________
Variable is a container for a value. It behaves as the valu that it contains 

String (str) is a series of characters 

	name = "Bro"
	print(name) 

	name = "Bro"
	print("Hello " + name) 

* Note que na citação o espaço é contabilizado 

	First_Name = "Bro"
	Last_Name = "Code"
	Full_Name = First_Name + Last_Name 
	Print("Hello " + " " + Full_Name)

* Note que para adicionarmos um espaço entre as palavras, adicionamos " " 

Integer (int) is a whole number

	age = 21
	age = 21 + 1
	print(age)

	age = 21
	age += 1
	print(age) 

* Como não podemos misturar tipos de variáveis, fazer um print("your age is: " + age) daria erro por ser str + int. 
Para fazer dar certo, faríamos: 

	age = 21
	age += 1
	print("Your age is: " + str(age))

Float (float) is an floating point number (a decimal number) 
	
	height = 250.5
	print(height)
	print(type(height)) 

	height = 250.5
	print("Your height is: " + str(height)) 

*utilizar ponto ao invés de vírgula 

Boolean (bool) is an true or false variable 

	human = False 
	print(human)
	print("Are you a human: " + str(human)) 
	print(type(human)) 

* True ou False tem que começar com letra maiúscula 


____________________________________
Verify the data type of a variable
____________________________________
	print(type(variable))
	

_____________________
Multiple Assignments 
_____________________
Allows us to assign multiple variables at the same time in one line of code 

# ao invés de fazer uma variável por linha, dá para colocar em uma linha só

	name = "Bro"
	age = 21
	attractive = True

	name, age, attractive = "Bro", 21, True

	print(name)
	print(age)
	print(attractive)


	Spongebob = 30
	Patrick = 30
	Sandy = 30
	Squidward = 30

	Spongebob = Patrick = Sandy = Squidward = 30

	print(Spongebob)
	print(Patrick)
	print(Sandy)
	print(Squidward)


_______________
String Methods 
_______________
	name = "BroCode"
	print(len(name))
	print(name.find("o"))
	print(name.capitalize())
	print(name.upper())
	print(name.lower())
	print(name.isdigit())
	print(name.isalpha())
	print(name.count("o"))
	print(name*3)


______________
Type Casting
______________
Convert the data type of a value to another data type 

	x = 1  #int
	y = 2.0 #float
	z = "3" #str

	y = int(y)
	z = int(z)

	print(x)
	print(y)
	print(z*3) #se não fizessemos o type casting a cima, como a variavel estava em string, o resultado seria o retorno repetido tres vezes


___________
User Input
___________
	name = input("What is your name?: ")
	age = int(input("How old are you?: "))
	height = float(input("How tall are you?: "))

	print("Hello " + name)
	print("You are " + str(age) + " years old")
	print("You are " + str(height) + " cm")

 	# quando feito um input de um numero ele entra como str, para fazermos
	 uma soma, ele precisa ser int ou float, então declaramos ele como int,
	 fazemos a operação matemática, e depois com type cast voltamos ele
 	 de volta para str


_______________
Math functions
_______________
	import math

	pi = 3.14
	x = 1
	y = 2
	z = 3

	print(round(pi))
	print(math.ceil(pi))
	print(math.floor(pi))
	print(abs(pi))
	print(pow(pi,2))
	print(math.sqrt(420))
	print(max(x,y,z))
	print(min(x,y,z))


_______________
String Slicing
_______________
Create a substring by extracting elements from another string 

* indexing[] or slice ()
* [start:stop:step]
* Lembrando que o primeiro caracter é 0
* O stop conta o numero de caracteres ou na casa onde parar
* step é o andamento, normalmente é 1, se colocado 2 pula 1 letra

name = "João Victor"

first_name = name[0:4]
# forma simplificada name[:4]
last_name = name[5:11]
# forma simplificada name[6:]
funky_name = name[::2]
reversed_name = name[::-1]

print(first_name)
print(last_name)
print(funky_name)
print(reversed_name)

website1 = "http://google.com"
website2 = "http://wikipedia.com"

# a str começa no numero 0 de forma crescente, mas o último número pode ser considerado -1, o penultimo -2, etc. 

slice = slice(7,-4)

print(website1[slice])
print(website2[slice])


______________
if statements 
______________
A block of code that will execute if it's condition is true 


age = int(input("How old are you?: "))

if age == 100:
    print("You are a century old!")
elif age >= 18:
    print("You are an adult!")
elif age < 0:
    print("You haven't been born yet")
else:
    print("You are a child")


________________________________
Logical operators (and, or, not 
________________________________
Used to check if two or more conditional statements are true

temp = int(input("What  is the temperature outside?: "))

if temp >= 0 and temp <= 30:
    print("The temperature is good today!")
    print("go outside")
elif temp < 0 or temp > 30:
    print("The temperature is bad today! ")
    print("Stay inside! ")

if not(temp >= 0 and temp <= 30):
    print("The temperature is bad today! ")
    print("Stay inside! ")
elif not(temp < 0 or temp > 30):
    print("The temperature is good today!")
    print("go outside")


___________
While loop
___________
A statement that will execute it's block of code, as long as it's condition remains true. 

name = ""

while len(name) == 0:
    name = input("Enter your name: ")

print ("Hello " + name)


__________
For Loops
__________
A statement that will execute it's block of code a limited amount of times 

- while loop - unlimted 
- for loop - limited 

for i in range(10):
    print(i+1)

for i in range (50,100+1,2):
    print(i)

* o primeiro valor (50) é inclusivo, e o último (100) é exclusivo, por isso no final precisaremos adicionar o +1

for i in range (50,100+1,2):
    print(i)

* o step (2) determina que a contagem vai ser de dois em dois

for i in "Bro Code":
    print(i)

import time

for seconds in range (10,0,-1):
    print(seconds)
    time.sleep(1)
print("Happy New Year")


_____________
Nested Loops
_____________
The "inner loop" will finish all of it's iterations before finishing one iteration of the "outer loop"

* the inner loop will be in charge opf the columns
* the for loops will be in charge of the rows

rows = int(input("How many rows?: "))
columns = int(input("How many columns?: "))
symbol = input("Enter symbol to use: ")

for i in range (rows):
    for j in range (columns):
        print(symbol, end="")
    print()


____________________
Break - Continue - Pass
____________________

Loop Control Statements = change a loops execution from it's normal sequence

# break = used to terminate the loop entirely
# continue = skips to the next iteration of the loop
# pass = does nothing, acts as a placeholder

while True:
        name = input("Enter your name: ")
        if name != "":
            break


phone_number = "123-456-7890"

for i in phone_number:
    if i == "-":
        continue
    print(i, end="")


for i in range(1,21):

    if i == 13:
        pass
    else:
        print(i)


______
Lists
______
Used to store multiple items in a single variable

food = ["pizza", "hamburguer", "hotdog", "spaghetti", "pudding"]

food[0] = "sushi"

food.append("ice cream")
food.remove("hotdog")
food.pop()
food.insert(0,"cake")
food.sort()
food.clear()

for x in food:
    print(x)
* Para retornar a lista inteira 


_________________







